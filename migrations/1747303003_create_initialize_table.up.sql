-- 表结构

CREATE TABLE public.base_model (
    id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    model_name text NOT NULL,
    technic_name text NOT NULL,
    co_id int4 NULL,
    "path" text NULL,
    model_version varchar(50) NULL,
    model_type varchar(100) NULL,
    architectures jsonb NULL,
    pretraining_datasets jsonb NULL,
    training_objectives jsonb NULL,
    model_language varchar(50) NULL,
    tasks jsonb NULL,
    tags jsonb NULL,
    license varchar(100) NULL,
    training_framework varchar(100) NULL,
    limitations text NULL,
    authors text NULL,
    model_created_at timestamp NULL,
    model_references text NULL,
    disk_size_gb varchar(20) NULL,
    "template" text NULL,
    CONSTRAINT base_model_pkey PRIMARY KEY (id)
);
CREATE UNIQUE INDEX base_model_technic_name_idx ON public.base_model USING btree (technic_name, co_id);


CREATE TABLE public.dataset_base_info (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    dataset_name text NOT NULL,
    dataset_desc text NULL,
    dataset_type int4 NOT NULL,
    dataset_uuid uuid NOT NULL,
    dataset_state int4 NOT NULL,
    co_id int4 NOT NULL,
    train_name text NULL,
    CONSTRAINT dataset_base_info_pkey PRIMARY KEY (id)
);
CREATE UNIQUE INDEX dataset_base_info_dataset_name_idx ON public.dataset_base_info USING btree (dataset_name);
CREATE UNIQUE INDEX dataset_base_info_dataset_uuid_idx ON public.dataset_base_info USING btree (dataset_uuid);


CREATE TABLE public.dataset_detail_info (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    file_uuid uuid NOT NULL,
    dataset_detail jsonb NOT NULL,
    CONSTRAINT dataset_detail_info_pkey PRIMARY KEY (id)
);
CREATE INDEX dataset_detail_info_file_uuid_idx ON public.dataset_detail_info USING btree (file_uuid);


CREATE TABLE public.deploy_models_tasks (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    save_model_path text NOT NULL,
    deploy_model_name text NOT NULL,
    task_uuid uuid NOT NULL,
    status_code int4 DEFAULT 0 NOT NULL,
    status text DEFAULT 'pending'::text NOT NULL,
    deploy_template text NULL,
    deploy_system text NULL,
    deploy_parameters jsonb NULL,
    server_url text NOT NULL,
    quantize public."quantize_enum" DEFAULT 'None'::quantize_enum NOT NULL,
    save_task_uuid uuid NULL,
    CONSTRAINT deploy_models_tasks_unique UNIQUE (id)
);


CREATE TABLE public.file_upload_info (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    file_path text NOT NULL,
    file_name text NOT NULL,
    file_uuid uuid NOT NULL,
    file_ext text NOT NULL,
    file_relate_type int4 NOT NULL,
    file_relate uuid NULL,
    file_size int8 NULL,
    CONSTRAINT file_upload_info_pkey PRIMARY KEY (id)
);


CREATE TABLE public.knowledge_base_info (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    base_name text NOT NULL,
    base_desc text NULL,
    base_uuid uuid NOT NULL,
    co_id int4 NOT NULL,
    model_config_id int8 NULL,
    CONSTRAINT knowledge_base_info_pkey PRIMARY KEY (id)
);
CREATE INDEX knowledge_base_info_base_name_idx ON public.knowledge_base_info USING btree (base_name, co_id);


CREATE TABLE public.knowledge_detail_info (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    knowledge_base_uuid uuid NOT NULL,
    file_uuid uuid NOT NULL,
    analyze_state int4 NOT NULL,
    CONSTRAINT knowledge_detail_info_pkey PRIMARY KEY (id)
);


CREATE TABLE public.llm_factories (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    factory text NOT NULL,
    factory_name jsonb NULL,
    is_deploy bool NULL,
    CONSTRAINT llm_factories_pkey PRIMARY KEY (id)
);
CREATE INDEX llm_factories_factory_idx ON public.llm_factories USING btree (factory);


CREATE TABLE public.llm_user_config (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    factory_id int8 NOT NULL,
    llm_id int8 NULL,
    api_key text NULL,
    "describe" text NULL,
    status int4 NOT NULL,
    request_url text NULL,
    user_id int8 NOT NULL,
    co_id int8 NOT NULL,
    ping_time int8 NULL,
    model_type text NULL,
    model_name text NULL,
    CONSTRAINT llm_user_config_pkey PRIMARY KEY (id)
);
CREATE UNIQUE INDEX llm_user_config_factory_id_idx ON public.llm_user_config USING btree (factory_id, llm_id, user_id);
CREATE UNIQUE INDEX llm_user_config_model_name_idx ON public.llm_user_config USING btree (model_name, co_id, user_id, factory_id);


CREATE TABLE public.model (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    model_name text NOT NULL,
    task_uuid uuid NOT NULL,
    model_type int4 NOT NULL,
    co_id int4 NULL,
    actual_path text NULL,
    base_path varchar NULL,
    base_model varchar NULL,
    CONSTRAINT model_pkey PRIMARY KEY (id)
);
CREATE UNIQUE INDEX model_model_name_task_uuid_idx ON public.model USING btree (model_name, task_uuid);


CREATE TABLE public.model_card (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    model_name text NOT NULL,
    co_id int4 NULL,
    stage public."model_stage" NULL,
    model_card_uuid uuid NOT NULL,
    parent_id uuid NULL,
    fields jsonb NULL,
    CONSTRAINT model_card_model_card_uuid_key UNIQUE (model_card_uuid),
    CONSTRAINT model_card_pkey PRIMARY KEY (id),
    CONSTRAINT model_card_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.model_card(model_card_uuid) ON DELETE SET NULL
);


CREATE TABLE public.model_comparison_results (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NULL,
    task_uuid uuid NOT NULL,
    dataset_uuid uuid NOT NULL,
    page_num int4 NULL,
    record_id text NOT NULL,
    response_a text NULL,
    response_b text NULL,
    error_a text NULL,
    error_b text NULL,
    response_judge text NULL,
    description text NULL,
    candidate_system_prompt text NULL,
    candidate_user_prompt text NULL,
    judge_system_prompt text NULL,
    judge_user_prompt text NULL,
    err_judge text NULL,
    CONSTRAINT model_comparison_results_pkey PRIMARY KEY (id)
);
CREATE INDEX idx_mcr_task_record ON public.model_comparison_results USING btree (task_uuid, record_id);
CREATE INDEX idx_mcr_task_uuid ON public.model_comparison_results USING btree (task_uuid);


CREATE TABLE public.model_comparison_tasks (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    task_uuid uuid DEFAULT gen_random_uuid() NOT NULL,
    dataset_uuid uuid NOT NULL,
    model_a_config jsonb NOT NULL,
    model_b_config jsonb NOT NULL,
    judge_model_config jsonb NULL,
    candidate_system_prompt text NULL,
    candidate_user_prompt text NULL,
    judge_system_prompt text NULL,
    judge_user_prompt text NULL,
    status varchar(20) DEFAULT 'pending'::character varying NULL,
    finished_at int8 NULL,
    eval_type int4 DEFAULT 0 NOT NULL,
    dataset_item_num int4 DEFAULT 0 NOT NULL,
    CONSTRAINT model_comparison_tasks_pkey PRIMARY KEY (id),
    CONSTRAINT model_comparison_tasks_task_uuid_key UNIQUE (task_uuid)
);
CREATE INDEX idx_mct_dataset_uuid ON public.model_comparison_tasks USING btree (dataset_uuid);


CREATE TABLE public.save_models_tasks (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    save_path text NOT NULL,
    base_model_path text NOT NULL,
    lora_adapter_path text NULL,
    save_model_name text NOT NULL,
    dtype_str text NULL,
    train_id text NULL,
    task_uuid uuid NOT NULL,
    status text DEFAULT 'pending'::text NOT NULL,
    status_code int4 DEFAULT 0 NOT NULL,
    CONSTRAINT save_models_tasks_pkey PRIMARY KEY (id)
);


CREATE TABLE public.sys_company (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    co_code int4 NULL,
    co_name varchar NULL,
    co_identifier varchar NULL,
    CONSTRAINT sys_company_pkey PRIMARY KEY (id)
);
CREATE UNIQUE INDEX sys_company_co_code_idx ON public.sys_company USING btree (co_code);
CREATE UNIQUE INDEX sys_company_co_identifier_idx ON public.sys_company USING btree (co_identifier);
CREATE UNIQUE INDEX sys_company_co_name_idx ON public.sys_company USING btree (co_name);


CREATE TABLE public.sys_menus (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    menu_name jsonb NOT NULL,
    menu_tag text NOT NULL,
    co_code int4 NOT NULL,
    "path" text NULL,
    group_name text NULL,
    is_index bool DEFAULT false NULL,
    component text NULL,
    CONSTRAINT sys_menus_pkey PRIMARY KEY (id)
);
CREATE UNIQUE INDEX sys_menus_parea_id_idx ON public.sys_menus USING btree (co_code, menu_tag);


CREATE TABLE public.sys_user_sso_map (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    union_id text NOT NULL,
    user_id int4 NOT NULL,
    provider int4 NOT NULL,
    CONSTRAINT sys_user_sso_map_pkey PRIMARY KEY (id)
);
CREATE UNIQUE INDEX sys_user_sso_map_union_id_idx ON public.sys_user_sso_map USING btree (union_id, user_id);


CREATE TABLE public.sys_users (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    "uuid" text NULL,
    username text NULL,
    "password" text NULL,
    nick_name text DEFAULT '系统用户'::text NULL,
    side_mode text DEFAULT 'dark'::text NULL,
    header_img text DEFAULT 'https://qmplusimg.henrongyi.top/gva_header.jpg'::text NULL,
    base_color text DEFAULT '#fff'::text NULL,
    active_color text DEFAULT '#1890ff'::text NULL,
    phone text NULL,
    email text NULL,
    co_code int4 NOT NULL,
    "enable" int8 DEFAULT 1 NULL,
    is_deleted bool DEFAULT false NOT NULL,
    CONSTRAINT sys_users_pkey PRIMARY KEY (id)
);
CREATE INDEX idx_sys_users_username ON public.sys_users USING btree (username);
CREATE INDEX idx_sys_users_uuid ON public.sys_users USING btree (uuid);
CREATE UNIQUE INDEX sys_users_co_code_idx ON public.sys_users USING btree (co_code, username);


CREATE TABLE public.table1 (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    template_name jsonb NOT NULL,
    template_uuid uuid NOT NULL,
    is_system bool DEFAULT false NOT NULL,
    co_id int4 NULL,
    is_origin bool DEFAULT false NOT NULL,
    steps_num int4 NOT NULL,
    template_parameters jsonb NULL,
    job_parameters jsonb NULL,
    train_file bytea NULL,
    template_type int4 NULL,
    extract_show_field text NULL,
    CONSTRAINT sys_job_template_pkey PRIMARY KEY (id)
);
CREATE UNIQUE INDEX sys_job_template_template_uuid_idx ON public.table1 USING btree (template_uuid);


CREATE TABLE public.table2 (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    frame_type int4 NOT NULL,
    template_uuid uuid NULL,
    parameter_type text NOT NULL,
    parameter_field text NOT NULL,
    is_required bool NOT NULL,
    fixed_options jsonb NULL,
    source_options text NULL,
    parameter_label jsonb NOT NULL,
    events jsonb NULL,
    visibility_condition jsonb NULL,
    interface_options jsonb NULL,
    show_seq int4 NOT NULL,
    actions jsonb NULL,
    CONSTRAINT sys_job_template_frame_frame_type_template_uuid_show_seq_key UNIQUE (frame_type, template_uuid, show_seq),
    CONSTRAINT sys_job_template_frame_pkey PRIMARY KEY (id)
);


CREATE TABLE public.table3 (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    job_id text NOT NULL,
    job_name jsonb NULL,
    job_mode text NOT NULL,
    job_tag text NULL,
    job_parameters jsonb NULL,
    task_parameters jsonb NOT NULL,
    job_start_time int8 NOT NULL,
    job_end_time int8 NOT NULL,
    job_limit_times int4 NOT NULL,
    job_type int4 NOT NULL,
    job_state int4 NOT NULL,
    job_template_uuid uuid NULL,
    job_request_parameters jsonb NULL,
    parea_id int4 NULL,
    pv_id_list _int4 NULL,
    CONSTRAINT sys_cron_job_pkey PRIMARY KEY (id)
);


CREATE TABLE public.table4 (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    job_id text NOT NULL,
    task_uuid text NOT NULL,
    task_start_time int8 NOT NULL,
    task_end_time int8 NULL,
    task_state int4 NOT NULL,
    failed_step int4 NULL,
    message jsonb NULL,
    CONSTRAINT sys_cron_job_task_pkey PRIMARY KEY (id)
);


CREATE TABLE public.table5 (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    template_uuid uuid NOT NULL,
    source_template_uuid uuid NOT NULL,
    template_parameters jsonb NULL,
    source_template_seq int4 NOT NULL,
    remark text NULL,
    CONSTRAINT sys_job_chain_pkey PRIMARY KEY (id)
);


CREATE TABLE public.table6 (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    source_tag text NOT NULL,
    source_select text NOT NULL,
    source_content text NOT NULL,
    fixed_condition text NULL,
    CONSTRAINT sys_job_option_source_pkey PRIMARY KEY (id)
);


CREATE TABLE public.table7 (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    template_uuid uuid NOT NULL,
    shared_to int4 NOT NULL,
    CONSTRAINT sys_job_shared_relation_pkey PRIMARY KEY (id)
);

CREATE TABLE public.sys_version_config (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    deploy_version float8 NOT NULL,
    is_init bool NOT NULL,
    CONSTRAINT sys_version_config_pkey PRIMARY KEY (id)
);


CREATE TABLE public.sys_deploy_env (
    id bigserial NOT NULL,
    created_at int8 NOT NULL,
    created_by int4 NOT NULL,
    updated_at int8 NOT NULL,
    updated_by int4 NOT NULL,
    deploy_factory text NOT NULL,
    env_url text NOT NULL,
    co_code int4 NOT NULL,
    CONSTRAINT sys_deploy_env_pkey PRIMARY KEY (id)
);